---

- name: detect binary file for registry
  become: false
  delegate_to: "{{ registry_delegate_to }}"
  stat:
    path: "{{ registry_local_tmp_directory }}/registry"
  register: stat_file_binary

- name: copy binary files
  block:
    - name: propagate registry binaries
      copy:
        src: "{{ registry_local_tmp_directory }}/registry"
        dest: "{{ registry_install_path }}/registry"
        mode: 0755
        owner: "{{ registry_system_user }}"
        group: "{{ registry_system_group }}"
        remote_src: "{{ 'true' if registry_direct_download else 'false' }}"

    - name: make files executable
      file:
        path: "{{ registry_install_path }}/registry"
        mode: 0755
        owner: "{{ registry_system_user }}"
        group: "{{ registry_system_group }}"

  when:
    - stat_file_binary.stat.exists

- name: create local facts
  template:
    src: ansible_facts.j2
    dest: /etc/ansible/facts.d/registry.fact
    mode: 0755

- name: create registry data directory
  file:
    state: directory
    path: "{{ registry_data_dir }}"
    mode: 0770
    owner: "{{ registry_system_user }}"
    group: "{{ registry_system_group }}"

- name: create link to binary
  file:
    src: "{{ registry_install_path }}/registry"
    dest: "/usr/bin/registry"
    state: link
    force: true
    follow: false
  notify:
    - restart registry

- name: systemd
  block:
    - name: create systemd service unit
      template:
        src: "init/systemd/registry.service.j2"
        dest: "{{ systemd_lib_directory }}/registry.service"
        owner: root
        group: root
        mode: 0644
      notify:
        - daemon-reload
        - restart registry

    - name: create registry run configuration
      template:
        src: "registry.j2"
        dest: "{{ registry_defaults_directory }}/registry"
        force: true
        owner: root
        group: "{{ registry_system_group }}"
        mode: 0640
      notify:
        - validate config
        - reload registry
  when:
    - ansible_service_mgr | lower == "systemd"

- name: openrc
  block:
    - name: create openrc service configuration
      template:
        src: "init/openrc/conf.d/registry.j2"
        dest: "/etc/conf.d/registry"
        owner: root
        group: root
        mode: 0644

    - name: create openrc init configuration
      template:
        src: "init/openrc/init.d/registry.j2"
        dest: "/etc/init.d/registry"
        owner: root
        group: root
        mode: 0750
  when:
    - ansible_service_mgr | lower == "openrc"

...
